atic Equations', date: '2023-06-01T14:30:00Z' },
      { id: 2, activity: 'Earned badge: Math Whiz', date: '2023-05-30T10:15:00Z' },
      { id: 3, activity: 'Completed quiz: Linear Algebra', score: 90, date: '2023-05-28T16:45:00Z' },
    ],
  };

  return (
    <div className="max-w-6xl mx-auto p-6">
      <div className="flex justify-between items-center mb-6">
        <h1 className="text-2xl font-bold">Student Progress</h1>
        <div className="text-sm text-gray-500">
          Last active: {new Date(studentData.lastActive).toLocaleString()}
        </div>
      </div>

      <div className="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
        <div className="bg-white p-6 rounded-lg shadow">
          <h3 className="text-lg font-semibold mb-2">Student Information</h3>
          <div className="space-y-2">
            <p><span className="font-medium">Name:</span> {studentData.name}</p>
            <p><span className="font-medium">Email:</span> {studentData.email}</p>
            <p><span className="font-medium">Level:</span> {studentData.level}</p>
          </div>
        </div>

        <div className="bg-white p-6 rounded-lg shadow">
          <h3 className="text-lg font-semibold mb-2">Progress</h3>
          <div className="space-y-2">
            <p><span className="font-medium">Experience:</span> {studentData.experience}/{studentData.nextLevelExp} XP</p>
            <div className="w-full bg-gray-200 rounded-full h-2.5">
              <div 
                className="bg-blue-600 h-2.5 rounded-full" 
                style={{ width: `${(studentData.experience / studentData.nextLevelExp) * 100}%` }}
              ></div>
            </div>
            <p><span className="font-medium">Completed Lessons:</span> {studentData.completedLessons}</p>
            <p><span className="font-medium">Average Score:</span> {studentData.averageScore}%</p>
          </div>
        </div>

        <div className="bg-white p-6 rounded-lg shadow">
          <h3 className="text-lg font-semibold mb-2">Topic Mastery</h3>
          <div className="space-y-2">
            {studentData.progress.map((topic) => (
              <div key={topic.topic}>
                <div className="flex justify-between text-sm mb-1">
                  <span>{topic.topic}</span>
                  <span>{topic.progress}%</span>
                </div>
                <div className="w-full bg-gray-200 rounded-full h-2">
                  <div 
                    className="bg-green-500 h-2 rounded-full" 
                    style={{ width: `${topic.progress}%` }}
                  ></div>
                </div>
              </div>
            ))}
          </div>
        </div>
      </div>

      <div className="bg-white p-6 rounded-lg shadow">
        <h2 className="text-xl font-semibold mb-4">Recent Activity</h2>
        <div className="space-y-4">
          {studentData.recentActivities.map((activity) => (
            <div key={activity.id} className="border-b pb-2 last:border-0 last:pb-0">
              <div className="flex justify-between">
                <p>{activity.activity}</p>
                <span className="text-sm text-gray-500">
                  {new Date(activity.date).toLocaleDateString()}
                </span>
              </div>
              {'score' in activity && (
                <div className="text-sm text-gray-600 mt-1">
                  Score: {activity.score}%
                </div>
              )}
            </div>
          ))}
        </div>
      </div>
    </div>
  );
};

export default StudentProgress;


Файл: frontend/src/pages/teacher/TeacherDashboard.tsx
-----------------------------------------------------
import { ReactNode } from 'react';
import { Link } from 'react-router-dom';
import { useAppSelector } from '../../app/hooks';
import { Navigate } from 'react-router-dom';

interface TeacherDashboardProps {
  children?: ReactNode;
}

export default function TeacherDashboard({ children }: TeacherDashboardProps) {
  const { user } = useAppSelector((state) => state.auth);

  if (!user) {
    return <Navigate to="/login" replace />;
  }

  // If children are provided, render them in a container
  if (children) {
    return <div className="w-full">{children}</div>;
  }

  // Otherwise, render the default dashboard content
  return (
    <div className="p-6">
      <h1 className="text-2xl font-bold text-gray-800 mb-6">
        Welcome, {user.firstName || 'Teacher'}!
      </h1>
      <div className="bg-white p-6 rounded-lg shadow">
        <p className="text-gray-600 mb-4">Teacher Dashboard Options:</p>
        <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
          <Link 
            to="/teacher/students" 
            className="p-4 border rounded-lg hover:bg-gray-50 transition-colors"
          >
            <h3 className="font-medium text-lg">Manage Students</h3>
            <p className="text-sm text-gray-500">View and manage your students</p>
          </Link>
          <Link 
            to="/teacher/progress" 
            className="p-4 border rounded-lg hover:bg-gray-50 transition-colors"
          >
            <h3 className="font-medium text-lg">View Progress</h3>
            <p className="text-sm text-gray-500">Track student progress</p>
          </Link>
        </div>
      </div>
    </div>
  );
}


Файл: frontend/tsconfig.json
----------------------------
{
  "compilerOptions": {
    "target": "ES2020",
    "useDefineForClassFields": true,
    "lib": ["ES2020", "DOM", "DOM.Iterable"],
    "module": "ESNext",
    "skipLibCheck": true,
    "moduleResolution": "node",
    "resolveJsonModule": true,
    "isolatedModules": true,
    "jsx": "react-jsx",
    "strict": true,
    "noUnusedLocals": true,
    "noUnusedParameters": true,
    "noFallthroughCasesInSwitch": true,
    "noImplicitAny": false,
    "esModuleInterop": true,
    "allowSyntheticDefaultImports": true,
    "forceConsistentCasingInFileNames": true,
    "baseUrl": ".",
    "paths": {
      "@/*": ["./src/*"]
    },
    "composite": true
  },
  "include": ["src"],
  "exclude": ["node_modules", "dist"],
  "references": [{ "path": "./tsconfig.node.json" }]
}


Файл: frontend/tsconfig.node.json
---------------------------------
{
  "extends": "./tsconfig.json",
  "compilerOptions": {
    "composite": true,
    "module": "esnext",
    "moduleResolution": "node",
    "target": "ESNext",
    "types": ["node"],
    "allowSyntheticDefaultImports": true,
    "esModuleInterop": true,
    "skipLibCheck": true,
    "forceConsistentCasingInFileNames": true,
    "strict": true,
    "noEmit": false
  },
  "include": ["vite.config.ts", "plugins/spa-fallback.ts", "vite-spa-fallback.ts"],
  "exclude": ["node_modules", "dist", "**/*.test.ts"]
}


Файл: frontend/vite-spa-fallback.ts
-----------------------------------
import { Plugin } from 'vite';
import { readFileSync } from 'fs';
import { resolve } from 'path';

export default function spaFallback(): Plugin {
  return {
    name: 'spa-fallback',
    configureServer(server) {
      server.middlewares.use((req, res, next) => {
        // Skip API requests and static assets
        if (req.url?.startsWith('/api/') || 
            req.url?.includes('.') || 
            req.url?.startsWith('/@vite/') ||
            req.url?.startsWith('/node_modules/') ||
            req.url?.startsWith('/src/') ||
            req.url?.startsWith('/assets/')) {
          return next();
        }
        
        // For all other routes, serve index.html
        const html = readFileSync(resolve(process.cwd(), 'index.html'), 'utf-8');
        res.statusCode = 200;
        res.setHeader('Content-Type', 'text/html');
        res.end(html);
      });
    },
  };
}


Файл: frontend/vite.config.ts
-----------------------------
import { defineConfig } from 'vite';
import react from '@vitejs/plugin-react';
import { resolve } from 'path';
import { fileURLToPath } from 'url';

const __filename = fileURLToPath(import.meta.url);
const __dirname = resolve(__filename, '..');

export default defineConfig({
  base: '/',
  plugins: [react()],
  appType: 'spa',
  
  // Server configuration
  server: {
    port: 3003,
    strictPort: true,
    host: true,
    cors: true,
    open: true,
    hmr: {
      host: 'localhost',
      protocol: 'ws',
      overlay: false
    },
    proxy: {
      '^/api': {
        target: 'http://localhost:3002',
        changeOrigin: true,
        secure: false,
        rewrite: (path) => path.replace(/^\/api/, '')
      },
      '/socket.io': {
        target: 'ws://localhost:3002',
        ws: true,
      }
    },
    // This is the key part for SPA fallback
    fs: {
      strict: false
    }
  },
  
  // Build configuration
  build: {
    rollupOptions: {
      input: {
        main: resolve(__dirname, 'index.html'),
      },
    },
    sourcemap: true,
    minify: 'esbuild',
    outDir: 'dist',
    emptyOutDir: true,
  },
  
  // Resolve configuration
  resolve: {
    alias: {
      '@': resolve(__dirname, 'src'),
    },
  },
});


Файл: math-quest@1.0.0
----------------------
Не удалось прочитать содержимое файла.